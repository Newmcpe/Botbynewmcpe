<?php
/**
 * Created by PhpStorm.
 * User: Newmcpe –∏ MrKarasik
 * Date: 08.03.2018
 * Time: 1:21
 */
require_once "Tools.php";
$token = "fea01489a5b578360fe1dbac23a9dc5d91fc8615cb85d9373d1d3738dc153a83799d7c9ba7988714a3910";
$user_id = 477189774;
$captcha_album = 251278738;
$rospisphoto = "photo431257723_456239044";
$request_params = http_build_query(array(
    'hash' => $otvet["hash"],
    'photo' => $otvet["photo"],
    'access_token' => $token,
    'v' => '5.0'
));
$activated_victorinas = array();
$query = json_decode(file_get_contents('https://api.vk.com/method/messages.getLongPollServer?' . $request_params), 1);
$server = $query["response"]["server"];
$key = $query["response"]["key"];
$ts = $query["response"]["ts"];
$captchakey = "";
$captchasid = "";
while (true) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, "https://{$server}?act=a_check&key={$key}&ts={$ts}&wait=90&mode=2&version=2 ");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $result = curl_exec($ch);
    // $result = "{\"failed\":2}";
    $decres = json_decode($result, 1);
    if (mb_stripos($result, "{\"failed\":2") !== false) {
        $datetime = date("H:i:s");
        mysqli_query(getMySQLConnection(), "INSERT INTO logs (text,timedate) VALUES ('–∫–ª—é—á,—É—Å—Ç–∞—Ä–µ–ª –ø—Ä–æ–±—É—é –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ','$datetime')");
        echo "–∫–ª—é—á,—É—Å—Ç–∞—Ä–µ–ª –ø—Ä–æ–±—É—é –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\n";
        $request_params = http_build_query(array(
            'access_token' => $token,
            'v' => '5.0'
        ));
        $query = json_decode(file_get_contents('https://api.vk.com/method/messages.getLongPollServer?' . $request_params), 1);
        var_dump($query);
        $server = $query["response"]["server"];
        $key = $query["response"]["key"];
        $ts = $query["response"]["ts"];
    } else {
        $ts = $decres["ts"];//431257723
    }
    if ($decres["updates"][3][6]["source_act"] == "chat_invite_user") {
        echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É\n";
        $request_params = http_build_query(array(
            'message' => "üíæ–ü—Ä–∏–≤–µ—Ç ,–ø–∏–¥–æ—Ä—ã —è –±–æ—Ç –ö–∞—Ä–∞—Å—åüíæ \nüî¥–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏üî¥: \n 1.üíæ–ö–æ–º–∞–Ω–¥—ã üíæ \n 2.üòÑ –î–ª—è –≤–µ—Å–µ–ª—å—è üòÑ \n 3.‚òï –ö–∞—Ä—Ç–∏–Ω–∫–∏ –∏ —Ç.–¥ ‚òï \n 4.üöî–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—èüöî \n 5.üìñ–ö–∞—Ä–∞—Å—å –∏—Å—Ç–æ—Ä–∏–∏üìñ \n 6.üí∞–î–ª—è –ø–æ–∫—É–ø–æ–∫üí∞",
            'peer_id' => $decres["updates"][3][3],
            'access_token' => $token,
            'v' => '5.38'
        ));
        echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
    }
    if ($decres["updates"][0][0] == 4) {
        echo $decres["updates"][0][5] . "\n";;
    } elseif ($decres["updates"][1][0] == 4) {
        $msg = $decres["updates"][1][5];
        $whosended = $decres["updates"][1][6]["from"];
        if ($whosended != $user_id) { // —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–æ—Ç–∞
            if (isset($activated_victorinas[$whosended])) {
                $question = getQuestion($activated_victorinas[$whosended]);
                $answer = $question["answer"];
                $question = $question["question"];
                $countsymbols = iconv_strlen($answer);
                if (mb_stripos($msg, "–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã") !== false) {
                    $request_params = http_build_query(array(
                        'message' => "‚ùå –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã :(! ‚ùå\n\n –ß—Ç–æ–±—ã –µ—â–µ —Ä–∞–∑ —Å—ã–≥—Ä–∞—Ç—å,–ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ \"–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞\" ",
                        'peer_id' => $decres["updates"][1][3],
                        'captcha_sid' => $captchasid,
                        'captcha_key' => $captchakey,
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                    unset($activated_victorinas[$whosended]);
                }

                if (mb_stripos($answer, $msg) !== false) {
                    giveMoney($whosended, "2");
                    $request_params = http_build_query(array(
                        'message' => " ‚úî –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ! ‚úî\n\n üí∞ –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: " . getMoney($whosended) . " üí∞ \n\n –ß—Ç–æ–±—ã –µ—â–µ —Ä–∞–∑ —Å—ã–≥—Ä–∞—Ç—å,–ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ \"–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞\" ",
                        'peer_id' => $decres["updates"][1][3],
                        'captcha_sid' => $captchasid,
                        'captcha_key' => $captchakey,
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                    unset($activated_victorinas[$whosended]);
                } else {
                    $request_params = http_build_query(array(
                        'message' => " ‚ùå –û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π! ‚ùå\n\nüìù –í–æ–ø—Ä–æ—Å: $question üìù\n\nüî¢ –ë—É–∫–≤ –≤ –æ—Ç–≤–µ—Ç–µ: $countsymbols üî¢\n\nüí∞–ü—Ä–∏–∑ –∑–∞ –æ—Ç–≤–µ—Ç: 2 –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–∞üí∞ \n\n‚ùå–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ \"–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã\" ‚ùå ",
                        'peer_id' => $decres["updates"][1][3],
                        'captcha_sid' => $captchasid,
                        'captcha_key' => $captchakey,
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    $response1 = json_decode(file_get_contents('https://api.vk.com/method/messages.send?' . $request_params), 1);
                    /*   if ($response1["error"]["error_code"] == 14) {

                           $request_params = http_build_query(array(
                               'album_id' => $captcha_album,
                               'access_token' => $token,
                               'v' => '5.38'
                           ));
                           $uploadserver1 = json_decode(file_get_contents('https://api.vk.com/method/photos.getUploadServer?' . $request_params), 1)["response"]["upload_url"];
                           file_put_contents(__DIR__ . "/captcha.jpg", file_get_contents($response1["error"]["captcha_img"]));
                           $curl = curl_init($uploadserver1);
                           curl_setopt($curl, CURLOPT_POST, true);
                           curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                           curl_setopt($curl, CURLOPT_POSTFIELDS, array('file1' => new CURLFile(__DIR__ . "/captcha.jpg")));
                           $json = json_decode(curl_exec($curl), 1);
                           var_dump($json);
                           $request_params = http_build_query(array(
                               'album_id' => $captcha_album,
                               'server' => $json["server"],
                               'hash' => $json["hash"],
                               'photos_list' => $json["photos_list"],
                               'access_token' => $token,
                               'v' => '5.38'
                           ));
                           $uploadserver = json_decode(file_get_contents('https://api.vk.com/method/photos.save?' . $request_params), 1);
                           $photoid = "photo" . $uploadserver["response"][0]["owner_id"] . "_" . $uploadserver["response"][0]["id"];
                           $request_params = http_build_query(array(
                               'peer_id' => $decres["updates"][1][3],
                               'message' => "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞,–Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ö–∞—Ä–∞—Å—å –≤–≤–µ—Å—Ç–∏ –∫–∞–ø—á—É [–∫–æ–¥],—á—Ç–æ–±—ã –±–æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–ª",
                               'attachment' => $photoid,
                               'access_token' => $token,
                               'v' => '5.38',
                           ));
                           $captchasid = $response1["error"]["captcha_sid"];
                           echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                       }
                   }*/
                }
            }
            if (mb_stripos($msg, "—Å–æ—Å–∏") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–Ø —Ç–∞–∫ —Ç–≤–æ–µ–π –º–∞–º–∫–µ –Ω–æ—á—å—é –≥–æ–≤–æ—Ä–∏–ª.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }

            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –∫—Ç–æ") !== false) {
                $what = implode(" ", array_slice(explode(" ", $msg), 2));
                $chatid = $decres["updates"][1][3] - 2000000000;
                $request_params = http_build_query(array(
                    'chat_id' => $chatid,
                    'fields' => "photo_50",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                $res = json_decode(file_get_contents('https://api.vk.com/method/messages.getChatUsers?' . $request_params), 1);
                $response = $res["response"][array_rand($res["response"])];
                $name = $response["first_name"] . " " . $response["last_name"];
                $id = $response["id"];
                $request_params = http_build_query(array(
                    'message' => "–Ø –¥—É–º–∞—é,—á—Ç–æ [id$id|$name] $what",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å —Å–∫–∞–∂–∏") !== false) {
                $what = str_ireplace(" ", "+", implode(" ", array_slice(explode(" ", $msg), 2)));
                $tmp_image = file_get_contents("http://194.67.200.179/speechkit/www/api/yandex_api.php?say=$what");
                $hashrand = md5(mt_rand(0, 99999999999));
                $fname = __DIR__ . "/audios/$hashrand.ogg";
                file_put_contents($fname, "$tmp_image");
                $request_params = http_build_query(array(
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'type' => 'audio_message',
                    'v' => '5.38'
                ));
                $uploadserver = json_decode(file_get_contents('https://api.vk.com/method/docs.getMessagesUploadServer?' . $request_params), 1)["response"]["upload_url"];
                $curl = curl_init($uploadserver);
                curl_setopt($curl, CURLOPT_POST, true);
                curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($curl, CURLOPT_POSTFIELDS, array('file' => new CURLFile($fname)));
                $json = json_decode(curl_exec($curl), 1);
                $file = $json["file"];
                $request_params = http_build_query(array(
                    'file' => $json["file"],
                    'captcha_sid' => $captchasid,
                    'captcha_key' => $captchakey,
                    'title' => $hashrand,
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                $response1 = json_decode(file_get_contents('https://api.vk.com/method/docs.save?' . $request_params), 1);
                $request_params = http_build_query(array(
                    'peer_id' => $decres["updates"][1][3],
                    //  'message' => $file,
                    'attachment' => 'doc' . $response1["response"][0]["owner_id"] . "_" . $response1["response"][0]["id"],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n" . $response1["error"]["error_code"];
                if ($response1["error"]["error_code"] == 14) {
                    /*******************************–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–ø—á–∏****************************************/
                    $request_params = http_build_query(array(
                        'album_id' => $captcha_album,
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    $uploadserver1 = json_decode(file_get_contents('https://api.vk.com/method/photos.getUploadServer?' . $request_params), 1)["response"]["upload_url"];
                    file_put_contents(__DIR__ . "/captcha.jpg", file_get_contents($response1["error"]["captcha_img"]));
                    $curl = curl_init($uploadserver1);
                    curl_setopt($curl, CURLOPT_POST, true);
                    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                    curl_setopt($curl, CURLOPT_POSTFIELDS, array('file1' => new CURLFile(__DIR__ . "/captcha.jpg")));
                    $json = json_decode(curl_exec($curl), 1);
                    var_dump($json);
                    $request_params = http_build_query(array(
                        'album_id' => $captcha_album,
                        'server' => $json["server"],
                        'hash' => $json["hash"],
                        'photos_list' => $json["photos_list"],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    $uploadserver = json_decode(file_get_contents('https://api.vk.com/method/photos.save?' . $request_params), 1);
                    $photoid = "photo" . $uploadserver["response"][0]["owner_id"] . "_" . $uploadserver["response"][0]["id"];
                    $request_params = http_build_query(array(
                        'peer_id' => $decres["updates"][1][3],
                        'message' => "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞,–Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ö–∞—Ä–∞—Å—å –≤–≤–µ—Å—Ç–∏ –∫–∞–ø—á—É [–∫–æ–¥],—á—Ç–æ–±—ã –±–æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–ª",
                        'attachment' => $photoid,
                        'access_token' => $token,
                        'v' => '5.38',
                    ));
                    $captchasid = $response1["error"]["captcha_sid"];
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                }
            } elseif (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –≤–≤–µ—Å—Ç–∏ –∫–∞–ø—á—É") !== false) {
                if ($decres["updates"][1][6]["from"] != 431257723) {
                    $captcha = explode(" ", $msg)[3];
                    $request_params = http_build_query(array(
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'message' => "–ö–∞–ø—á–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞",
                        'v' => '5.38'
                    ));
                    $captchakey = $captcha;
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                }
            }
            if (mb_stripos($msg, "–∫–æ–º–∞–Ω–¥—ã") !== false) {
                $request_params = http_build_query(array(
                    'message' => "1.üìä–ö–∞—Ä–∞—Å—å —à–∞–Ω—Å(—Ç–µ–∫—Å—Ç)üìä \n 2.üîû–ö–∞—Ä–∞—Å—å –∫—Ç–æ(—Ç–µ–∫—Å—Ç)üîû \n 3.üí∞–ö–∞—Ä–∞—Å—å –º–æ–π –±–∞–ª–∞–Ω—Åüí∞ \n 4.üí∞–ö–∞—Ä–∞—Å—å –ø–µ—Ä–µ–¥–∞–π –¥–µ–Ω—å–≥–∏(–∏–¥ —á–µ–ª–æ–≤–µ–∫–∞) (—Å—É–º–º–∞) \n 5.üìù–í–∏–∫—Ç–æ—Ä–∏–Ω–∞üìù \n 6.üìù–û—Ç–∫–∞–∑–∞—Ç—å –æ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—ãüìù \n 7.üí∞–ö–∞—Ä–∞—Å—å —Å—Ç–∞–≤–∫–∞(—Å—É–º–º–∞)",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–¥–ª—è –≤–µ—Å–µ–ª—å—è") !== false) {
                $request_params = http_build_query(array(
                    'message' => "1.ü§∑üèª‚Äç‚ôÇÔ∏è –ú–∏–ª–∞ ü§∑üèª‚Äç‚ôÇÔ∏è \n 2.ü§∑üèª‚Äç‚ôÇÔ∏è –í–∏—Ç—è ü§∑üèª‚Äç‚ôÇÔ∏è \n 3.üìÑ–ö–∞—Ä–∞—Å—å —Ä–∏—Ñ–º–∞üìÑ \n 4.üîû–ü–æ–¥—Ä–æ—á–∏—Ç—å –Ω–∞ —Ñ–µ–¥–æ—Ä—á—É–∫üîû \n 5.üîû–ü–æ—Ä–Ω–æüîû \n 6.üîû–•–µ–Ω—Ç–∞–πüîû \n 7.üîû–ê–Ω–≥–µ–ª–∏–Ω–∞üîû \n 8.üîû–ò–ª—å—èüîû \n 9.üîû–ê–ª–∏—Å–∞, –∏–∑–º–µ—Ä—å –º–æ–π –ø–∏—Å–æ—Åüîû",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ —Ç.–¥") !== false) {
                $request_params = http_build_query(array(
                    'message' => "1.üéß–ö–∞—Ä–∞—Å—å –¥–∞–π –º—É–∑–ª–æüéß \n 2.üé¨–ö–∞—Ä–∞—Å—å –¥–∞–π –≤–∏–¥–æ—Åüé¨ ",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ö–µ–Ω—Ç–∞–π") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ó–∞–ø–æ–º–Ω–∏,–∞–Ω–∏–º–µ –¥–ª—è –ø–∏–¥–æ—Ä–æ–≤,–Ω–æ –≤—Å–µ-—Ç–∞–∫–∏ –¥–∞–º —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç—É —Ö—É–π–Ω—é\nhttps://vk.com/away.php?to=http%3A%2F%2Fanimemovie.ru%2Fhentai%2F&el=snippet\nhttps://www.24video.top/tag/view/280121",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–î–ª—è –ø–æ–∫—É–ø–æ–∫") !== false) {
                $request_params = http_build_query(array(
                    'message' => "üíæ–ö–æ–º–∞–Ω–¥—ãüíæ: \n 1.üì¶–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤üì¶ \n 2.üí∞–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å (–∏–¥ —Ç–æ–≤–∞—Ä–∞)üí∞",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –∏—Å—Ç–æ—Ä–∏–∏") !== false) {
                $request_params = http_build_query(array(
                    'message' => "üíÇ–ò—Å—Ç–æ—Ä–∏—è –∞—Å–ª–∞–Ω–∞üíÇ \n üôÖ–ò—Å—Ç–æ—Ä–∏—è –º–∏–ª—ãüôÖ",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∏—Å—Ç–æ—Ä–∏—è –∞—Å–ª–∞–Ω–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "\n –î–∞–≤–∞–π—Ç–µ –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É \"–ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏\". –Ø –Ω–∞—á–∏–Ω–∞—é –ø–µ—Ä–≤—ã–º! \n –•–º–º, —á—Ç–æ –∂–µ –∑–∞–≥–∞–¥–∞—Ç—å? –ü—Ä–∏–¥—É–º–∞–ª, —à–µ–ø—Ç—É–Ω! –ê –≤—ã —Ç–µ–ø–µ—Ä—å \n –æ—Ç–≥–∞–¥—ã–≤–∞–µ—Ç–µ —Å –∫–∞–∫–∏–º –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–º —ç—Ç–æ —Å–≤—è–∑–∞–Ω–æ. –ú–¥–∞... –Ø \n –∑–∞–≥–∞–¥–∞–ª —Å–ª–∏—à–∫–æ–º –ª—ë–≥–∫–æ–µ, –∫–∞–∂–¥—ã–π –∂–µ –æ—Ç–≥–∞–¥–∞–ª, —á—Ç–æ —ç—Ç–æ –ê—Å–ª–∞–Ω! \n –ê—Å–ª–∞–Ω - —Ö–æ—Ä–æ—à–∏–π –¥—Ä—É–≥ –∏ –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫. \n \"–ü–æ–º–æ–∂–µ—Ç –≤ –±–µ–¥–µ, —Å—ä–µ—Å—Ç –≤–∞—Å –≤ —Ä–∞–¥–æ—Å—Ç–∏!\" \n - —ç—Ç–∏ —Å–ª–æ–≤–∞ –ø—Ä–æ –Ω–µ–≥–æ, –æ–Ω –≤–µ—Å–∏—Ç –±–æ–ª—å—à–µ, —á–µ–º 10 –§–µ–¥–æ—Ä—á—É–∫ (–§–µ–¥–æ—Ä—á—É–∫ - –µ–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤–µ—Å–∞ –≤–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π –≤–æ—Å—å–º—ã—Ö –∫–ª–∞—Å—Å–æ–≤ —à–∫–æ–ª—ã ‚Ññ7). \n –ù–æ –í–∏—Ç—è –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç –∫–∏–Ω—É—Ç—å –µ–≥–æ –Ω–∞ –ø—Ä–æ–≥–∏–±, –ø—Ä–∏ –µ–≥–æ —Ç–∞–∫–æ–º –±–æ–ª—å—à–æ–º –≤–µ—Å–µ. \n –ê —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏–º—Å—è –≤ —Ä–∞–∑–¥–µ–≤–∞–ª–∫—É. –¢–æ–ª—å–∫–æ –≤—Å–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ –∂–∏–≤–æ—Ç–∏–∫ –∫–æ–≥–¥–∞ –æ–Ω —Å–Ω–∏–º–∞–µ—Ç —Å–≤–æ—é —Ñ—É—Ç–±–æ–ª–∫—É. –ê –µ–≥–æ –Ω–æ–∂–∫–∏ - —ç—Ç–æ —Å–∞–º–æ–µ –ª—É—á—à–µ–µ, —á—Ç–æ –µ—Å—Ç—å –Ω–∞ —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç–µ. \n –Ø –≤—Å–ø–æ–º–∏–Ω–∞—é –ø—Ä–æ –Ω–∏—Ö, –∫–æ–≥–¥–∞ –µ–º —Å–æ—á–Ω—ã–µ –∏ –∂–∏—Ä–Ω—ã–µ –∫—Ä—ã–ª—ã—à–∫–∏ –∏–∑ KFC.–í—Å–µ –¥–µ–≤–æ—á–∫–∏ —Ç–µ–∫—É—Ç –ø–æ –ê—Å–ª–∞–Ω—á–∏–∫—É.",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239042",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –∏–¥–∏ –Ω–∞—Ö—É–π") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ù–µ –º–æ–≥—É –ø–æ–π—Ç–∏ –Ω–∞ —Ç–æ —á–µ–≥–æ —É —Ç–µ–±—è –Ω–µ—Ç",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∏—Å—Ç–æ—Ä–∏—è –º–∏–ª—ã") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ú–∏–ª–∞, –ú–∏–ª–∞, –ú–∏–ª–∞... –≠—Ç–æ –∏–º—è —É–∂–µ —É –∫–∞–∂–¥–æ–≥–æ –Ω–∞ —Å–ª—É—Ö—É, –Ω–æ –∫–∞–∫ \n –æ–Ω–∞ —Å—Ç–∞–ª–∞ —Ç–∞–∫–æ–π? –í—Å—ë –Ω–∞—á–∞–ª–æ—Å—å —Å —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∞ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ 7 \n –∫–ª–∞—Å—Å–∞ –ø—Ä–∏—à–ª–∞ –∫ –Ω–∞–º –≤ —à–∫–æ–ª—É. –û–Ω–∞ —Å—Ä–∞–∑—É –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–∞—Ç—ã–≤–∞—Ç—å –∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –ø–∞—Ä–Ω—è–º (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–æ–≤) \n –°–Ω–∞—á–∞–ª–∞ –º—ã –≤—Å–µ —Å—á–∏—Ç–∞–ª–∏ –µ—ë –æ–±—ã—á–Ω–æ–π –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏—Ü–µ–π, –Ω–æ –≤ –Ω–∞—á–∞–ª–µ 8 –∫–ª–∞—Å—Å–∞ –≤—Å–µ —É–∑–Ω–∞–ª–∏ –æ –µ—ë —É–≤–ª–µ—á–µ–Ω–∏–∏ –∫–æ–Ω–Ω—ã–º —Å–ø–æ—Ä—Ç–æ–º \n –¢–∞–∫ –∂–µ —É –Ω–µ—ë –µ—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –≤–∏–¥–µ–æ—Ö–æ—Å—Ç–∏–Ω–≥–µ \"YouTube\" \n –ú—ã —Å—Ä–∞–∑—É –Ω–∞—á–∞–ª–∏ –¥–æ–±—Ä–æ –Ω–∞–¥ –Ω–µ—ë —à—É—Ç–∏—Ç—å, –Ω–æ –æ–Ω–∞ —ç—Ç–æ –≤—Å—ë –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–ª–∞ –≤—Å–µ—Ä—å—ë–∑. –ò —Ç–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ—Å—å –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–µ! \n  –ú—ã –Ω–∞—á–∞–ª–∏ –¥–µ–ª–∞—Ç—å –ø—Ä–æ –Ω–µ—ë –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –º–µ–º–æ–≤, –∞ –ø–æ—Ç–æ–º –Ω–∞—à–ª–∏ –µ—ë –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø—Ä–∏–≤–∞—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏. \n –û–Ω–∞ –Ω–∞ –Ω–∏—Ö –∫—É—Ä–∏–ª–∞, –±—É—Ö–∞–ª–∞ —Å–æ —Å–≤–æ–µ–π –õ–ü –í–∏–∫–æ–π! \n (–Ω–∞–ø–∏—à—É –∫–æ–º–º–∞–Ω–¥—É \"–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–ª—ã\" —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —á–∏—Ç–∞—Ç—å)  ",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239040",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–ª—ã") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–≠—Ç–∏ —Ñ–æ—Ç–æ –º—ã —Å–ª–∏–ª–∏, —Ç–∞–∫ –∫–∞–∫ –∞–¥–º–∏–Ω—ã –∑–∞ –ó–û–ñ.\n –ò –Ω–∞—á–∞–ª–∞—Å—å –≤–æ–ª–Ω–∞ –º–µ–º–æ–≤ —Å –Ω–∏–º–∏, –∫–∞–∫ —Ä–∞–∑ —Ç–æ–≥–¥–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã —Å–∏–ª—å–Ω–æ –≤–æ–∑—Ä–æ—Å–ª–∞. \n –ü–æ—Å–ª–µ —ç—Ç–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –æ–Ω–∞ —Å—Ç–∞–ª–∞ –æ—á–µ–Ω—å –¥–µ—Ä–∑–∫–æ–π (–∫–∞–∫ –ø—É–ª—è —Ä–µ–∑–∫–æ–π) –∏ –±–æ—Ä–∑–æ–π. \n –ù–æ –≤—Å–∫–æ—Ä–µ –æ–Ω–∞ –≤—Å—Ç–∞–ª–∞ –Ω–∞ –ø—É—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è - —Å—Ç–∞–ª–∞ –ø—Ä–∏–ª–∏—á–Ω–æ —Å–µ–±—è –≤–µ—Å—Ç–∏ —Å –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞–º–∏. –°–µ–π—á–∞—Å –æ–Ω–∞ –≤–ø–æ–ª–Ω–µ –æ–±—ã—á–Ω–∞—è –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏—Ü–∞, —Å–æ —Å–≤–æ–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ –∏ –≤–∫—É—Å–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∞—Å –¥–æ–ª–∂–µ–Ω —É–≤–∞–∂–∞—Ç—å!",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239041",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–≤–∏—Ç—è") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–õ–µ–≥–µ–Ω–¥–∞",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239018",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø—Ä–æ–ø–∏–∑–¥–æ–Ω") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ë–ª—è –∑–∞–µ–±–∞–ª–∏ –º–Ω–µ –æ–¥–∏–Ω —Ä–∞—Å —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ –º–∞–º–∞ —Å–∫–∞–∑–∞–ª–∞ –ø–æ –ø—Ä–∏–∫–æ–ª—É!(–ò–ª—å—è –•—Ä–∏—Å—Ç–Ω–∫–æ)",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–±–ª—è—Ç—å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–±–ª—è—Ç—å –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Å—É—á–∫–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–¢–≤–æ—è –º–∞—Ç—å —Å—É—á–∫–∞!",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—à–ª—é—Ö–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ü—Ä–æ—Ñ–µ—Å–∏—è —Ç–≤–æ–µ–π –º–∞–º—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–º–∞—Ç—å –µ–±–∞–ª") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–Ø —Ç–µ–±—è –ø–æ–Ω—è–ª.–¢–≤–æ—è –º–∞—Ç—å —É–∂–µ –Ω–∞ —Å—Ç–æ–ª–µ —Å–∫–æ—Ä–æ –æ–Ω–∞ —É–∑–Ω–∞–µ—Ç, —á—Ç–æ —Ç–∞–∫–æ–µ –∂—ë—Å—Ç–∫–æ–µ –ë–î–°–ú.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–û –±–æ—Ç–µ") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–í—Å–µ –ø—Ä–∞–≤–∞ –Ω–∞ –±–æ—Ç–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç [id190846469|Newmcpe] –∏ [id455064951|MrKarasik]" . "\n –ë–æ—Ç –±—ã —Å–¥–µ–ª–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≥—Ä—É–ø–ø—ã –ú–µ–º–∞—Å—ã 8–ò. (https://vk.com/memasnazakaz8i)",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø–µ—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ü—ë—Å –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π –æ—Ç–µ—Ü",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø—Ä–æ—à–º–∞–Ω–¥–æ–≤–∫–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ü—Ä–æ—Ñ–µ—Å–∏—è —Ç–≤–æ–µ–π –º–∞–º—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Å–æ—Å–∞—Ç—å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–Ø —Ç–∞–∫ —Ç–≤–æ–µ—ë –º–∞–º–µ –Ω–æ—á—å—é –≥–æ–≤–æ—Ä–∏–ª",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—à–∞–≤—É—Ö–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ë–ª—è –µ—Å–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç —à–∞—É—Ä–º–∞ —â–∞—Å –Ω–µ —Å—ä–µ–±—ë—Ç—Å—è –∑–Ω–∞—á–∏—Ç —è –ø–æ–∑–≤–æ–Ω—é –ü—É—Ç–∏–Ω—É –∏ –µ—ë –∑–∞–ø—Ä–µ—Ç—è—Ç –≤ –†–æ—Å–∏–∏.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—à–∞—É—Ä–º–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ë–ª—è –µ—Å–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç —à–∞—É—Ä–º–∞ —â–∞—Å –Ω–µ —Å—ä–µ–±—ë—Ç—Å—è –∑–Ω–∞—á–∏—Ç —è –ø–æ–∑–≤–æ–Ω—é –ü—É—Ç–∏–Ω—É –∏ –µ—ë –∑–∞–ø—Ä–µ—Ç—è—Ç –≤ –†–æ—Å–∏–∏.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ç—ã —á—ë –æ—Ö—É–µ–ª?") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê—Ö—É–µ–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ç—ã —á—ë –∞—Ö—É–µ–ª?") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê—Ö—É–µ–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ç—ã –æ—Ö—É–µ–ª?") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê—Ö—É–µ–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ë—ã–¥–ª–æ") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ë—ã–¥–ª–æ-—ç—Ç–æ —Ñ–∞–º–∏–ª–∏—è —Ç–≤–æ–µ–π —Å–µ–º—å–∏.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ù–µ—Ç –Ω—É —Ç—ã —Ç–æ—á–Ω–æ –∞—Ö—É–µ–ª") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê—Ö—É–µ–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ù–µ—Ç –Ω—É —Ç—ã —Ç–æ—á–Ω–æ –∞—Ö—É–µ–ª") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê—Ö—É–µ–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ç—ã –∞—Ö—É–µ–ª?") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê—Ö—É–µ–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ö—É–µ–ø—É—Ç–∞–ª–æ") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–°–ª–æ–∂–Ω—ã–π –ø—Ä–∏–∫–æ–ª",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø–∏–¥–∞—Ä–∞—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ü–∏–¥–∞—Ä–∞—Å –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–°–æ–º") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê –Ø –ù–ï –ü–û–ù–Ø–õ.–ö–¢–û –¢–£–¢ –ï–©–Å –¢–ê–ö–û–ô –°–û–ú –ê?",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—ë–±–∞–Ω–Ω–∞—è —Ä—ã–±–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–Å–±–∞–Ω–Ω—ã–π –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–µ–±–∞–Ω–Ω–∞—è —Ä—ã–±–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–Å–±–∞–Ω–Ω—ã–π –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ö—É–π") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–•—É–π —Ç–≤–æ—è –∫–ª–∏—á–∫–∞ –Ω–∞ –∑–æ–Ω–µ",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø–æ—Ä–Ω–æ") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ù–µ–∞.–ù–µ –¥–æ–∂–¥—ë—à—å—Å—è",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–º–∞—Ç—å —Å–¥–æ—Ö–Ω–µ—Ç") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ú–∞—Ç—å —Å–¥–æ—Ö–Ω–µ—Ç —Ç–æ–ª—å–∫–æ —É —Ç–µ–±—è",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∑–∞–µ–±–∞–ª") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ó–∞–µ–±–∞–ª –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã –º–µ–Ω—è",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å–∏–∫") !== false) {
                $request_params = http_build_query(array(
                    'message' => "üíæ–ü—Ä–∏–≤–µ—Ç,–ø–∏–¥–æ—Ä—ã,—è –±–æ—Ç –ö–∞—Ä–∞—Å—åüíæ \nüî¥–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏üî¥: \n 1.üíæ–ö–æ–º–∞–Ω–¥—ã üíæ \n 2.üòÑ –î–ª—è –≤–µ—Å–µ–ª—å—è üòÑ \n 3.‚òï –ö–∞—Ä—Ç–∏–Ω–∫–∏ –∏ —Ç.–¥ ‚òï \n 4.üöî–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—èüöî \n 5.üìñ–ö–∞—Ä–∞—Å–∏–∫ –∏—Å—Ç–æ—Ä–∏–∏üìñ \n 6.üí∞–î–ª—è –ø–æ–∫—É–ø–æ–∫üí∞",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Ö—É–µ—Å–æ—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ù–µ –¥—É–º–∞—é —á—Ç–æ –∫–∞—Ä–∞—Å—å –ø–æ–¥–æ–π–¥—ë—Ç –Ω–∞ —ç—Ç—É —Ä–æ–ª—å.–ê –≤–æ—Ç —Ç—ã –¥–∞! –•–£–ï–°–û–°–ò–©–ï",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ê–ª–∏—Å–∞, –∏–∑–º–µ—Ä—å –º–æ–π –ø–∏—Å–æ—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê–ª–∏—Å–∞ –∏–∑–º–µ—Ä–∏–ª–∞ —Ç–≤–æ–π –ø–∏—Å–æ—Å",
                    'attachment' => "photo477189774_456239043", "photo477189774_456239044", "photo477189774_456239045",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ê–ª–∏—Å–∞ –∏–∑–º–µ—Ä—å –º–æ–π –ø–∏—Å–æ—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ê–ª–∏—Å–∞ –∏–∑–º–µ—Ä–∏–ª–∞ —Ç–≤–æ–π –ø–∏—Å–æ—Å",
                    'attachment' => "photo477189774_456239043", "photo477189774_456239044", "photo477189774_456239045",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –ø–∏–¥–∞—Ä–∞—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ö–∞—Ä–∞—Å–∏ –Ω–µ –ø–∏–¥–æ—Ä—ã.–í—Å–µ –∫–∞—Ä–∞—Å–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—Ç—É—Ä–∞–ª—ã, –∞ –≤–æ—Ç —Ç—ã –ø–∏–¥–∞—Ä–∞—Å –µ—â—ë —Ç–æ—Ç.",
                    'attachment' => "photo477189774_456239026",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∞–Ω–∏–º–µ") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–¥–ª—è –ø–∏–¥–æ—Ä–æ–≤",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239026",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–º–∏–ª–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ª–æ—à–∞–¥—å",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239028",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫–µ–∫") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–õ–æ–ª –∫–µ–∫ —á–µ–±—É—Ä–µ–∫.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫—É—Ä—Ç–∏–∑–∞–Ω–∫–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–í–û–£ –í–û–£ –í–û–£! –ö–∞–∫–∏–µ —É–º–Ω—ã–µ —Å–ª–æ–≤–∞.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Å—É–∫–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ó–¥–µ—Å–± —Ç–æ–ª—å–∫–æ —Ç–≤–æ—è –º–∞—Ç—å —Å—É–∫–∞.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–Ω–∞—Ä—É—Ç–æ") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–±–ª—è —Ç–æ–ª—å–∫–æ –Ω–µ —ç—Ç—É –ø–∞—Ä–∞—à—É",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—É–∫—Ä–∞–∏–Ω–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–£–ö–†–ê–ò–ù–ê –í –°–ï–†–î–¶–ï!–í–°–ï –ú–†–ê–ó–ò –ü–û –û–î–ù–û–ú–£ –ö–û –ú–ù–ï! –ü–û–†–í–£ –ù–ê –ú–ê–õ–Æ–°–ö–û–í!",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø–∏–∑–¥–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–¢–∏—à–µ —Ç–∏—à–µ –Ω–µ –ª–µ–∑—å –∫ —Ç–æ–º—É —á–µ–≥–æ —É —Ç–µ–±—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç.",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∞–Ω–≥–µ–ª–∏–Ω–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–Ø –±—ã —Ä–∞—Å—Å–∫–∞–∑–∞–ª –∫—Ç–æ –æ–Ω–∞ –ø–æ –∂–∏–∑–Ω–∏ –∏ —á–µ–º –æ–Ω–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è, –Ω–æ –ò–ª—å—è –∑–∞–ø—Ä–µ—Ç–∏–ª :(",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∏–ª—å—è") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–ø–∏–¥–∞—Ä–∞—Å –µ–±—É—á–∏–π –≤–æ–æ–±—â–µ –∫–∞–∫ –≤—ã –µ–≥–æ –≤ —ç—Ç—É –∫–æ–Ω—Ñ—É –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–µ –ø–æ–Ω–∏–º–∞—é",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239026",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫–∞—Ä–∞—Å—å –∫–ª–∞—Å—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–°–ø–∞—Å–∏–±–æ! –í–µ–¥—å —è –ø–ª–∞–≤–∞—é –¥—è–ª –≤–∞—Å!",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239036",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫–∞—Ä–∞—Å—å —Ä–∏—Ñ–º–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–†–∞—É–Ω–¥!",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239047", "photo477189774_456239048", "photo477189774_456239050",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫–∞—Ä–∞—Å—å, —Ä–∏—Ñ–º–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–†–∞—É–Ω–¥!",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239028", "photo477189774_456239028", "photo477189774_456239028",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–∫—É—Ä–≤–∞") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–û–û–û–û –ö–¢–û –£ –ù–ê–° –¢–£–¢ –¢–ê–ö–û–ô –£–ú–ù–´–ô –ò –†–ê–ó–ì–û–í–ê–†–ò–í–ê–ï–¢ –ù–ê –ü–û–õ–¨–°–ö–û–ú",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ª–æ—Ö") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–õ–æ—Ö –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ —Ç—ã –≤–µ–¥—å —É –º–µ–Ω—è –µ—Å—Ç—å –æ—Ç–µ—Ü.–ê —É —Ç–µ–±—è –Ω–µ –º–∞–º—ã –Ω–µ –ø–∞–ø—ã :(",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239034",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ø–æ–¥—Ä–æ—á–∏—Ç—å –Ω–∞ —Ñ–µ–¥–æ—Ä—á—É–∫") !== false) {
                $request_params = http_build_query(array(
                    'message' => "–û—à–∏–±–∫–∞!–ù–µ–ª—å–∑—è –¥—Ä–æ—á–∏—Ç—å –Ω–∞ –±—Ä–µ–≤–Ω–æ! \n –í–æ—Ç –∫—Å—Ç–∞—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–µ–≤–Ω–∞:",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => "photo477189774_456239046",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –¥–∞–π –º—É–∑–ª–æ") !== false) {
                $music = getMusic();
                $request_params = http_build_query(array(
                    'message' => "",
                    'peer_id' => $decres["updates"][1][3],
                    'attachment' => $music[array_rand($music)],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }

            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –¥–æ–±–∞–≤—å –º—É–∑–ª–æ") !== false) {
                $type = $decres["updates"][1][6]["attach1_type"] . $decres["updates"][1][6]["attach1"];
                if (isMusicExists($type) == true) {
                    $request_params = http_build_query(array(
                        'message' => "–¢–∞–∫–∞—è –º—É–∑—ã–∫–∞ —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                } else {
                    addNewMusic($type);
                    $request_params = http_build_query(array(
                        'message' => "–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª $type",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                }
            }

            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –¥–∞–π –≤–∏–¥–æ—Å") !== false) {
                $videostosend = array();
                $newmessage = "–ü–æ–ª—É—á–∏ –∏ —Ä–∞—Å–ø–∏—à–∏—Å—å:)";
                $tokenformother = '602e8d344e7684d9e3ace9007518e5da4267b54524d0a3e17c9918fc7b6ef76eea192ca57a3d6795a96e0';
                $request_params = http_build_query(array(
                    'owner_id' => '-45745333',
                    'access_token' => $tokenformother,
                    'v' => '5.0'
                ));
                $quer = json_decode(file_get_contents('https://api.vk.com/method/video.get?' . $request_params), 1);
                $items = $quer["response"]["items"];
                for ($i = 0; $i < count($items); $i++) {
                    array_push($videostosend, "video" . $items[$i]["owner_id"] . "_" . $items[$i]["id"]);
                }
                $request_params = http_build_query(array(
                    'owner_id' => '-89157850',
                    'access_token' => $tokenformother,
                    'v' => '5.0'
                ));
                $quer = json_decode(file_get_contents('https://api.vk.com/method/video.get?' . $request_params), 1);
                $items = $quer["response"]["items"];
                for ($i = 0; $i < count($items); $i++) {
                    array_push($videostosend, "video" . $items[$i]["owner_id"] . "_" . $items[$i]["id"]);
                }
                $request_params = http_build_query(array(
                    'owner_id' => '-30316056',
                    'count' => '100',
                    'access_token' => $tokenformother,
                    'v' => '5.0'
                ));
                $quer = json_decode(file_get_contents('https://api.vk.com/method/wall.get?' . $request_params), 1);
                $items = $quer["response"]["items"];
                for ($i = 0; $i < count($items); $i++) {
                    array_push($videostosend, "video" . $items[$i]["attachments"][0]["video"]["owner_id"] . "_" . $items[$i]["attachments"][0]["video"]["id"]);
                }
                $request_params = http_build_query(array(
                    'message' => "–ü–æ–ª—É—á–∏ –∏ —Ä–∞—Å–ø–∏—à–∏—Å—å",
                    'attachment' => $videostosend[array_rand($videostosend)],
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –º–æ–π –±–∞–ª–∞–Ω—Å") !== false) {
                $request_params = http_build_query(array(
                    'message' => "üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " . getMoney($whosended) . " –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–æ–≤(–ö–ö)üí∞",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å —à–∞–Ω—Å") !== false) {
                $what = implode(" ", array_slice(explode(" ", $msg), 2));
                $rand = mt_rand(1, 100);
                $request_params = http_build_query(array(
                    'message' => "–®–∞–Ω—Å $what —Ä–∞–≤–µ–Ω $rand%",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "—Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤") !== false) {
                $what = implode(" ", array_slice(explode(" ", $msg), 2));
                $rand = mt_rand(1, 100);
                $request_params = http_build_query(array(
                    'message' => "üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ üì¶: \n 1.üëç –õ–∞–π–∫ –Ω–∞ –∞–≤—É üëç(–°—Ç–æ–∏–º–æ—Å—Ç—å:50)(–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å 1)\n2.üìù –†–æ—Å–ø–∏—Å—å üìù(–°—Ç–æ–∏–º–æ—Å—Ç—å:100)(–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å 2)\n3.‚ù§ –õ–∞–π–∫ –ø–æ–¥ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å ‚ù§(–°—Ç–æ–∏–º–æ—Å—Ç—å:35)(–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å 3)\n4.‚ù§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è ‚ù§(–°—Ç–æ–∏–º–æ—Å—Ç—å:15)(–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å 4)\n5.üìã –†–µ–ø–æ—Å—Ç –≤–∞—à–µ–π –ø–µ—Ä–≤–æ–π/–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏ üìã(–°—Ç–æ–∏–º–æ—Å—Ç—å:200)(–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å 5)",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –∫—É–ø–∏—Ç—å") !== false) {
                $what = explode(" ", $msg)[2];
                if ($what == 1) {
                    if (getMoney($whosended) >= 50) {
                        $request_params = http_build_query(array(
                            'user_ids' => "$whosended",
                            'fields' => "photo_id",
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        $photo_id = json_decode(file_get_contents('https://api.vk.com/method/users.get?' . $request_params), 1)["response"][0]["photo_id"];
                        $request_params = http_build_query(array(
                            'type' => "photo",
                            'owner_id' => explode("_", $photo_id)[0],
                            'item_id' => explode("_", $photo_id)[1],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        var_dump(file_get_contents('https://api.vk.com/method/likes.add?' . $request_params));
                        $request_params = http_build_query(array(
                            'message' => "‚úî –õ–∞–π–∫ –Ω–∞ –∞–≤—É —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω.–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ. ‚úî",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        takeMoney($whosended, 50);
                    } else {
                        $request_params = http_build_query(array(
                            'message' => "‚ùå–û—à–∏–±–∫–∞, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥. –í—ã –º–æ–∂–µ—Ç–µ –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ‚ùå",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    }
                }
                if ($what == 2) {
                    if (getMoney($whosended) >= 100) {
                        $request_params = http_build_query(array(
                            'attachment' => $rospisphoto,
                            'message' => "–õ–æ–≤–∏ —Ä–æ—Å–ø–∏—Å—å!",
                            'owner_id' => $whosended,
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        var_dump(file_get_contents('https://api.vk.com/method/wall.post?' . $request_params));
                        $request_params = http_build_query(array(
                            'message' => "‚úî –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ—Å—Ç–∏–ª —Ä–æ—Å–ø–∏—Å—å –Ω–∞ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ! ‚úî",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        takeMoney($whosended, 100);
                    } else {
                        $request_params = http_build_query(array(
                            'message' => "‚ùå–û—à–∏–±–∫–∞, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥. –í—ã –º–æ–∂–µ—Ç–µ –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ‚ùå",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    }
                }
                if ($what == 3) {
                    if (getMoney($whosended) >= 35) {
                        $request_params = http_build_query(array(
                            'owner_id' => $whosended,
                            'count' => 1,
                            'filer' => "owner",
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        $res = json_decode(file_get_contents('https://api.vk.com/method/wall.get?' . $request_params), 1);
                        $request_params = http_build_query(array(
                            'type' => "post",
                            'owner_id' => $res["response"]["items"][0]["owner_id"],
                            'item_id' => $res["response"]["items"][0]["id"],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        var_dump(file_get_contents('https://api.vk.com/method/likes.add?' . $request_params));
                        $request_params = http_build_query(array(
                            'message' => "‚úî –£—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –Ω–∞ –ø–µ—Ä–≤—É—é/–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –Ω–∞ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ! ‚úî",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        takeMoney($whosended, 35);
                    } else {
                        $request_params = http_build_query(array(
                            'message' => "‚ùå–û—à–∏–±–∫–∞, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥. –í—ã –º–æ–∂–µ—Ç–µ –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ‚ùå",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    }
                }
                if ($what == 4) {
                    if (getMoney($whosended) >= 15) {
                        $request_params = http_build_query(array(
                            'user_id' => $whosended,
                            'text' => "‚úî –í—ã –∫—É–ø–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ –¥—Ä—É–∑—å—è. –ü—Ä–∏–º–∏—Ç–µ –∑–∞—è–≤–∫—É ‚úî",
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        $res = json_decode(file_get_contents('https://api.vk.com/method/friends.add?' . $request_params), 1);
                        $request_params = http_build_query(array(
                            'message' => "‚úî –û—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∑–∞—è–≤–∫—É –≤ –¥—Ä—É–∑—å—è. –ü—Ä–∏–º–∏—Ç–µ –µ—ë! ‚úî",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        takeMoney($whosended, 15);
                    } else {
                        $request_params = http_build_query(array(
                            'message' => "‚ùå–û—à–∏–±–∫–∞, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥. –í—ã –º–æ–∂–µ—Ç–µ –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ‚ùå",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    }
                }
                if ($what == 5) {
                    if (getMoney($whosended) >= 200) {
                        $request_params = http_build_query(array(
                            'owner_id' => $whosended,
                            'count' => 1,
                            'filer' => "owner",
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        $res = json_decode(file_get_contents('https://api.vk.com/method/wall.get?' . $request_params), 1);
                        $request_params = http_build_query(array(
                            'object' => "wall".$res["response"]["items"][0]["owner_id"] . "_" . $res["response"]["items"][0]["id"],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        $res = json_decode(file_get_contents('https://api.vk.com/method/wall.repost?' . $request_params), 1);
                        $request_params = http_build_query(array(
                            'message' => "‚úî –†–µ–ø–æ—Å—Ç–Ω—É–ª –≤–∞—à—É –ø–µ—Ä–≤—É—é/–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ ‚úî",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                        takeMoney($whosended, 200);
                    } else {
                        $request_params = http_build_query(array(
                            'message' => "‚ùå–û—à–∏–±–∫–∞, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥. –í—ã –º–æ–∂–µ—Ç–µ –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ‚ùå",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    }
                }
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –¥–∞–π –¥–µ–Ω–µ–≥") !== false) {
                $moneytogive = explode(" ", $msg)[3];
                if ($whosended == 190846469 or $whosended == 455064951) {
                    giveMoney($whosended, $moneytogive);
                    $request_params = http_build_query(array(
                        'message' => "üí∞–î–µ—Ä–∂–∏ –Ω–∞ Xiaomi $moneytogive –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–æ–≤üí∞ \nüí∞–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: " . getMoney($whosended) . " –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω—ã(–ö–ö)üí∞",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                } else {
                    $request_params = http_build_query(array(
                        'message' => "–í—ã –Ω–µ –≤ –ø—Ä–∞–≤–µ –¥–µ–ª–∞—Ç—å —ç—Ç–æ–≥–æ!",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                }
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å –ø–µ—Ä–µ–¥–∞–π –¥–µ–Ω—å–≥–∏") !== false) {
                $exploded = explode(" ", $msg);
                $nick = $exploded[3];
                $peredatmoney = $exploded[4];
                $request_params = http_build_query(array(
                    'user_ids' => "$nick",
                    'name_case' => "dat",
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                if ($peredatmoney >= 0) {
                    $resp = json_decode(file_get_contents('https://api.vk.com/method/users.get?' . $request_params), 1)["response"][0];
                    $idtogive = $resp["id"];
                    $fi = $resp["first_name"] . " " . $resp["last_name"];
                    takeMoney($whosended, $peredatmoney);
                    giveMoney($idtogive, $peredatmoney);
                    $request_params = http_build_query(array(
                        'message' => "–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ $fi $peredatmoney –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–æ–≤",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                } else {
                    $request_params = http_build_query(array(
                        'message' => "‚ùå –ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º! ‚ùå",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                }
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞") !== false) {
                $vopros = getRandomQuestion();
                $question = $vopros["question"];
                $answer = $vopros["answer"];
                $id = $vopros["newid"];
                $countsymbols = iconv_strlen($answer, "UTF-8");
                $activated_victorinas[$whosended] = $id;
                $request_params = http_build_query(array(
                    'message' => "–í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É , –ø—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã!\n\nüìù –í–æ–ø—Ä–æ—Å: $question üìù\n\nüî¢ –ë—É–∫–≤ –≤ –æ—Ç–≤–µ—Ç–µ: $countsymbols üî¢\n\nüí∞–ü—Ä–∏–∑ –∑–∞ –æ—Ç–≤–µ—Ç: 2 –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–∞üí∞",
                    'peer_id' => $decres["updates"][1][3],
                    'access_token' => $token,
                    'v' => '5.38'
                ));
                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å") !== false) {
                if ($whosended == 190846469 or $whosended == 455064951) {
                    $exploded = explode(" ", $msg);
                    $nick = $exploded[3];
                    $peredatmoney = $exploded[4];
                    $request_params = http_build_query(array(
                        'user_ids' => "$nick",
                        'name_case' => "dat",
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    $resp = json_decode(file_get_contents('https://api.vk.com/method/users.get?' . $request_params), 1)["response"][0];
                    $id = $resp["id"];
                    $fi = $resp["first_name"] . " " . $resp["last_name"];
                    setMoney($id, $peredatmoney);
                    $request_params = http_build_query(array(
                        'message' => "üî¥–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∞–ª–∞–Ω—Å $fi $peredatmoney –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–æ–≤üî¥\n\nüîµ–¢–µ–ø–µ—Ä—å –µ–≥–æ –±–∞–ª–∞–Ω—Å —Ä–∞–≤–µ–Ω " . getMoney($id) . " –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–æ–≤(–ö–ö)üîµ",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                    echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
                } else {
                    $request_params = http_build_query(array(
                        'message' => "–í—ã –Ω–µ –≤ –ø—Ä–∞–≤–µ –¥–µ–ª–∞—Ç—å —ç—Ç–æ–≥–æ!",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                }
            }
            if (mb_stripos($msg, "–ö–∞—Ä–∞—Å—å —Å—Ç–∞–≤–∫–∞") !== false) {
                $exploded = explode(" ", $msg);
                $nick = $exploded[2];
                $peredatmoney = $exploded[2];
                $random = mt_rand(1, 100);
                if (getMoney($whosended) > 0) {
                    if ($random > 50) {
                        $lastbalance = getMoney($whosended);
                        giveMoney($whosended, ($peredatmoney * 1.5));
                        $request_params = http_build_query(array(
                            'message' => "‚úî –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏! ‚úî\n\n üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: $peredatmoney üí∞\n\n üí∞ –í–∞—à —Å—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å: $lastbalance üí∞ \n\n üí∞ –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: " . getMoney($whosended) . " üí∞\n\nüíª –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–Ω–¥–æ–º–∞: $random üíª",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    } else {
                        $lastbalance = getMoney($whosended);
                        takeMoney($whosended, $peredatmoney);
                        $request_params = http_build_query(array(
                            'message' => "‚ùå –°–æ–∂–∞–ª–µ–µ–º, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ‚ùå \n\n üí∞ –ú—ã –æ—Ç–Ω—è–ª–∏ —É –≤–∞—Å —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ $peredatmoney –ö–∞—Ä–∞—Å—å–ö–æ–∏–Ω–æ–≤ üí∞ \n\nüí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: $peredatmoney üí∞\n\n üí∞ –í–∞—à —Å—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å: $lastbalance üí∞ \n\n üí∞ –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: " . getMoney($whosended) . " üí∞\n\nüíª –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–Ω–¥–æ–º–∞: $random üíª",
                            'peer_id' => $decres["updates"][1][3],
                            'access_token' => $token,
                            'v' => '5.38'
                        ));
                    }
                } else {
                    $request_params = http_build_query(array(
                        'message' => "‚ùå –û—à–∏–±–∫–∞, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ ‚ùå \n\nüí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã(–ö–∞—Ä–∞—Å—å –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞) üí∞",
                        'peer_id' => $decres["updates"][1][3],
                        'access_token' => $token,
                        'v' => '5.38'
                    ));
                }

                echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
            }
            //–≤    if(mb_stripos($msg,"–ö–∞—Ä–∞—Å—å "))
            echo $msg . "\n" . $result;
        } else {
            $request_params = http_build_query(array(
                'message' => "–ü–∏–¥–æ—Ä–∞–º –Ω–µ –æ—Ç–≤–µ—á–∞—é.",
                'peer_id' => $decres["updates"][1][3],
                'access_token' => $token,
                'v' => '5.38'
            ));
         //   echo "get log:" . file_get_contents('https://api.vk.com/method/messages.send?' . $request_params) . "\n";
        }
    }
    echo $result;
}